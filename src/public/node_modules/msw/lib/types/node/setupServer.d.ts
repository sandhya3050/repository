import { RequestHandlersList } from '../setupWorker/glossary';
import { SharedOptions } from '../sharedOptions';
/**
 * Sets up a server-side requests interception with the given mock definition.
 */
export declare const setupServer: (...requestHandlers: RequestHandlersList) => {
    /**
     * Enables requests interception based on the previously provided mock definition.
     */
    listen(options?: SharedOptions | undefined): void;
    /**
     * Prepends given request handlers to the list of existing handlers.
     */
    use(...handlers: RequestHandlersList): void;
    /**
     * Marks all request handlers that respond using `res.once()` as unused.
     */
    restoreHandlers(): void;
    /**
     * Resets request handlers to the initial list given to the `setupServer` call, or to the explicit next request handlers list, if given.
     */
    resetHandlers(...nextHandlers: RequestHandlersList): void;
    /**
     * Stops requests interception by restoring all augmented modules.
     */
    close(): void;
};
